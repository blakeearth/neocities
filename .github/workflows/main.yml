name: Deploy to neocities

# only run on changes to main. Use main or master depending on whatever your default branch is called.
on:
    push:
        branches:
            - main

concurrency: # prevent concurrent deploys doing strange things
    group: deploy-to-neocities
    cancel-in-progress: true

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            # Set up any tools and build steps here
            # This example uses a Node.js toolchain to build a site
            - name: Build schema
              run: |
                  npm i
                  npm run gen
            - name: Use commit
              uses: EndBug/add-and-commit@v9
              with:
                  default_author: github_actions
            - name: Use Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
            - name: Create env file
              run: |
                  touch .env
                  echo HIGHLIGHTS_API="${{ secrets.HIGHLIGHTS_API }}" >> .env
                  echo TINA_PUBLIC_CLIENT_ID="${{ secrets.TINA_PUBLIC_CLIENT_ID }}" >> .env
                  echo TINA_TOKEN="${{ secrets.TINA_TOKEN }}" >> .env
                  echo TINA_SEARCH_TOKEN="${{ secrets.TINA_SEARCH_TOKEN }}" >> .env
                  cat .env
            # If you have a different build process, replace this with your own build steps
            - name: Install deps and build
              run: |
                  npm run build
            - name: Remove gitignore file
              run: rm ./dist/admin/.gitignore
            # When the dist_dir is ready, deploy it to neocities
            - name: Deploy to neocities
              uses: bcomnes/deploy-to-neocities@v3
              with:
                  api_key: ${{ secrets.NEOCITIES_API_TOKEN }}
                  cleanup: false
                  neocities_supporter: true # set this to true if you have a supporter account and want to bypass unsuported files filter.
                  preview_before_deploy: true # print a deployment plan prior to waiting for files to upload.
                  dist_dir: dist
