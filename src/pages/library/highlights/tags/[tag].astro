---
import { getCollection } from "astro:content";
import HighlightGrid from "../../../../components/HighlightGrid.astro";
import Layout from "../../../../layouts/BlogPost.astro";
import { string } from "astro:schema";

export async function getStaticPaths() {
  const highlights = await getCollection("highlights");

  // Split tags and get unique values
  const uniqueTags = [
    ...new Set(
      highlights.flatMap((highlight) =>
        highlight.data.tags
          .split(",")
          .filter((tag: string) => tag.length > 0)
          .map((tag: string) => tag.trim())
      )
    ),
  ];

  return uniqueTags.map((tag) => ({
    params: { tag },
    props: {
      filteredHighlights: highlights
        // apparently this is horrendous for perf, but because this is just during build time I think it's ok
        .sort(
          (a, b) =>
            new Date(b.data.timestamp).getTime() -
            new Date(a.data.timestamp).getTime()
        )
        .filter((highlight) =>
          highlight.data.tags
            .split(",")
            .filter((tag: string) => tag.length > 0)
            .map((t: string) => t.trim())
            .includes(tag)
        ),
    },
  }));
}

const { tag } = Astro.params;
const { filteredHighlights } = Astro.props;
---

<Layout title=`Highlights tagged "${tag}"`>
  <HighlightGrid highlights={filteredHighlights} />
</Layout>
