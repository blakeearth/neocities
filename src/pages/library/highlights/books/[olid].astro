---
import { getCollection } from "astro:content";
import HighlightGrid from "../../../../components/HighlightGrid.astro";
import Layout from "../../../../layouts/BlogPost.astro";

export async function getStaticPaths() {
  const highlights = await getCollection("highlights");
  const books = await getCollection("books");

  const uniqueBookOLIDs = [
    ...new Set(highlights.flatMap((highlight) => highlight.data.source)),
  ];

  return uniqueBookOLIDs.map((olid) => ({
    params: { olid },
    props: {
      book: books.find((b) => b.id === olid)?.data,
      filteredHighlights: highlights
        // apparently this is horrendous for perf, but because this is just during build time I think it's ok
        .sort(
          (a, b) =>
            new Date(b.data.timestamp).getTime() -
            new Date(a.data.timestamp).getTime(),
        )
        .filter((highlight) => highlight.data.source == olid),
    },
  }));
}

const { filteredHighlights, book } = Astro.props;
---

<Layout title=`Highlights`>
  <div>
    <h3>From <span class="italic">{book?.title}</span></h3>
    <span>By {book?.author}</span>
  </div>
  <HighlightGrid highlights={filteredHighlights} />
</Layout>
